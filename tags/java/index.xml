<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 标签 - Boyan Wei</title>
        <link>https://swaggerwei.github.io/tags/java/</link>
        <description>Java - 标签 - Boyan Wei</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 08 Apr 2022 10:49:01 &#43;0800</lastBuildDate><atom:link href="https://swaggerwei.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Java多线程学习4</title>
    <link>https://swaggerwei.github.io/java_threads_learning4/</link>
    <pubDate>Fri, 08 Apr 2022 10:49:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/java_threads_learning4/</guid>
    <description><![CDATA[同步方法和同步块 同步方法：public synchronized void method(int args){} 使用synchronized方法控制对对象的访问 每个对象都有一把锁，synchronized方]]></description>
</item><item>
    <title>Java多线程学习3</title>
    <link>https://swaggerwei.github.io/java_threads_learning3/</link>
    <pubDate>Wed, 06 Apr 2022 15:02:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/java_threads_learning3/</guid>
    <description><![CDATA[线程强制执行 Join合并线程，此线程执行完成后再执行其他线程，其他线程阻塞 可以想像成插队 线程中尽量少使用次方法，会让其他线程陷入阻塞 具体实现]]></description>
</item><item>
    <title>Java多线程学习2</title>
    <link>https://swaggerwei.github.io/java_threads_learning2/</link>
    <pubDate>Tue, 05 Apr 2022 09:46:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/java_threads_learning2/</guid>
    <description><![CDATA[静态代理模式 真实对象和代理对象都要实现同一个接口 代理对象要代理真实角色 优点，代理对象无法做很多真实对象无法做的事，真实对象可以专注于自己的事]]></description>
</item><item>
    <title>Java多线程学习1</title>
    <link>https://swaggerwei.github.io/java_threads_learning1/</link>
    <pubDate>Mon, 04 Apr 2022 10:30:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/java_threads_learning1/</guid>
    <description><![CDATA[Java 多线程基础知识 程序project：指令和数据的有序集合，静态概念 进程Process：程序的运行过程，是系统资源分配的单位，动态概念 线程Th]]></description>
</item><item>
    <title>JVM 学习6</title>
    <link>https://swaggerwei.github.io/jvm_learning6/</link>
    <pubDate>Sun, 03 Apr 2022 11:28:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning6/</guid>
    <description><![CDATA[遇到OOM错误的处理方式 尝试扩大对内存空间大小 能够看到代码第几行出错：内存快照工具（MAT， Jprofiler） MAT(eclipse)/J]]></description>
</item><item>
    <title>JVM 学习5</title>
    <link>https://swaggerwei.github.io/jvm_learning5/</link>
    <pubDate>Sat, 02 Apr 2022 16:03:23 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning5/</guid>
    <description><![CDATA[三种JVM Hotspot：Sun公司，用户数多 BEA JROckit：Oracle 设个财务前段办公、军事指挥与控制和电信网络的需要 j9vm JIT编译器：]]></description>
</item><item>
    <title>JVM 学习4</title>
    <link>https://swaggerwei.github.io/jvm_learning4/</link>
    <pubDate>Wed, 30 Mar 2022 22:55:14 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning4/</guid>
    <description><![CDATA[栈基本概念 一种先进后出的数据结构与队列相对 栈内存，主管程序的运行 生命周期与线程同步，线程结束，栈内存也就释放了 对于栈内存来说，不存在垃圾回收]]></description>
</item><item>
    <title>JVM 学习3</title>
    <link>https://swaggerwei.github.io/jvm_learning3/</link>
    <pubDate>Wed, 30 Mar 2022 16:26:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning3/</guid>
    <description><![CDATA[沙箱安全机制 限制程序运行的环境，将java代码限定在JVM特定的运行范围内 当前最新的安全机制实现，则引入了域(Domain) 的概念。虚拟机会]]></description>
</item><item>
    <title>JVM 学习2</title>
    <link>https://swaggerwei.github.io/jvm_learning2/</link>
    <pubDate>Tue, 29 Mar 2022 15:19:29 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning2/</guid>
    <description><![CDATA[JVM常见的问题 基本都是理论知识 谈谈你对JVM的理解 JAVA8 虚拟机和之前的区别 什么是OOM 什么是栈溢出StackOverFlowError，怎么分]]></description>
</item><item>
    <title>JVM 学习1</title>
    <link>https://swaggerwei.github.io/jvm_learning1/</link>
    <pubDate>Fri, 07 Jan 2022 20:59:17 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://swaggerwei.github.io/jvm_learning1/</guid>
    <description><![CDATA[9 JVM 类加载机制 Java 虚拟机将 Java 源码编译为字节码之后，虚拟机便可以将字节码读取进内存，从而进行解析、运行等整个过程，这个过程我们叫：Java 虚拟机]]></description>
</item></channel>
</rss>
